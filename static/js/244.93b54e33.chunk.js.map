{"version":3,"file":"static/js/244.93b54e33.chunk.js","mappings":"mTAEMA,EAAa,mCACbC,EAAW,gCAEXC,EAAgB,mCAAG,WAAMC,GAAN,gGAEKC,EAAAA,EAAAA,IAAA,UACfH,EADe,sCACuBD,GACzC,CACIK,OAAQF,EAAME,SALL,cAEXC,EAFW,yBAQVA,GARU,wHAAH,sDAchBC,EAAc,mCAAG,WAAOJ,EAAOK,GAAd,gGAEOJ,EAAAA,EAAAA,IAAA,UACfH,EADe,gCACiBD,EADjB,kBACqCQ,GACvD,CACIH,OAAQF,EAAME,SALP,cAETC,EAFS,yBAQRA,GARQ,wHAAH,wDAedG,EAAQ,mCAAG,WAAON,EAAMO,GAAb,gGAEaN,EAAAA,EAAAA,IAAA,UACfH,EADe,iBACES,EADF,oBACgBV,GAClC,CACIK,OAAQF,EAAME,SALb,cAEHC,EAFG,yBAQFA,GARE,wHAAH,wDAeRK,EAAY,mCAAG,WAAOR,EAAOO,GAAd,gGAESN,EAAAA,EAAAA,IAAA,UACfH,EADe,iBACES,EADF,4BACwBV,GAC1C,CACIK,OAAQF,EAAME,SALT,cAEPC,EAFO,yBAQNA,GARM,wHAAH,wDAcZM,EAAe,mCAAG,WAAOT,EAAOO,GAAd,gGAEMN,EAAAA,EAAAA,IAAA,UACfH,EADe,iBACES,EADF,4BACwBV,GAC1C,CACIK,OAAQF,EAAME,SALN,cAEVC,EAFU,yBAQTA,GARS,wHAAH,uD,yIC7DRO,EAAYC,EAAAA,GAAAA,IAAH,wCAITC,EAAQD,EAAAA,GAAAA,GAAH,qDAILE,EAAOF,EAAAA,GAAAA,EAAH,0B,SC8BjB,EAnCgB,WACZ,IAAQJ,GAAOO,EAAAA,EAAAA,MAAPP,GACR,GAA0BQ,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAwBF,EAAAA,EAAAA,WAAS,GAAjC,eAAOG,EAAP,KAAaC,EAAb,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAkB,IAAIC,gBAO5B,OALAb,EAAAA,EAAAA,IAAgBY,EAAiBd,GAAIgB,MAAK,SAAAC,GACtCP,EAASO,EAAIC,KAAKC,SAClBP,GAAQ,EACX,IAEM,WACHE,EAAgBrB,OACnB,CACJ,GAAE,CAACO,KAGA,yBACEW,EACmB,IAAjBF,EAAMW,OACFX,EAAMY,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASvB,EAApB,EAAoBA,GAApB,OACN,UAACG,EAAD,YACI,SAACE,EAAD,UAAQiB,KACR,SAAChB,EAAD,UAAOiB,MAFKvB,EADV,KAOV,8EATC,uCAahB,C","sources":["API/get-API.js","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst AUTH_TOKEN = 'b417ad14809407555d40747f9080afa2';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst getPopularMovies = async abort => {\n    try {\n        const respons = await axios.get(\n            `${BASE_URL}trending/movie/day?api_key=${AUTH_TOKEN}`,\n            {\n                signal: abort.signal,\n            }\n        );\n        return respons;\n    } catch (error) {\n        return error;\n    }\n};\n\nconst getSearchMovie = async (abort, name) => {\n    try {\n        const respons = await axios.get(\n            `${BASE_URL}search/movie?api_key=${AUTH_TOKEN}&query=${name}`,\n            {\n                signal: abort.signal,\n            }\n        );\n        return respons;\n    } catch (error) {\n        return error;\n    }\n};\n\n\nconst getMovie = async (abort,id) => {\n    try {\n        const respons = await axios.get(\n            `${BASE_URL}movie/${id}?api_key=${AUTH_TOKEN}`,\n            {\n                signal: abort.signal,\n            }\n        );\n        return respons;\n    } catch (error) {\n        return error;\n    }\n};\n\n\nconst getMovieCast = async (abort, id) => {\n    try {\n        const respons = await axios.get(\n            `${BASE_URL}movie/${id}/credits?api_key=${AUTH_TOKEN}`,\n            {\n                signal: abort.signal,\n            }\n        );\n        return respons;\n    } catch (error) {\n        return error;\n    }\n};\n\nconst getMovieReviews = async (abort, id) => {\n    try {\n        const respons = await axios.get(\n            `${BASE_URL}movie/${id}/reviews?api_key=${AUTH_TOKEN}`,\n            {\n                signal: abort.signal,\n            }\n        );\n        return respons;\n    } catch (error) {\n        return error;\n    }\n};\n\nexport { getPopularMovies, getSearchMovie, getMovie, getMovieCast, getMovieReviews };\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\npadding: 20px;\n`;\n\nexport const Title = styled.h3`\ntext-transform: capitalize;\n`;\n\nexport const Text = styled.p`\n\n`","import { getMovieReviews } from 'API/get-API';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Container, Title, Text } from './Reviews.styled';\n\nconst Reviews = () => {\n    const { id } = useParams();\n    const [state, setSteta] = useState([]);\n    const [load, setload] = useState(false);\n\n    useEffect(() => {\n        const abortController = new AbortController();\n\n        getMovieReviews(abortController, id).then(res => {\n            setSteta(res.data.results);\n            setload(true);\n        });\n\n        return () => {\n            abortController.abort();\n        };\n    }, [id]);\n\n    return (\n        <div>\n        {!load ? <p>loading...</p> :\n            state.length !== 0 ? (\n                state.map(({ author, content, id }) => (\n                    <Container key={id}>\n                        <Title>{author}</Title>\n                        <Text>{content}</Text>\n                    </Container>\n                ))\n            ) : (\n                <p>Sorry, we don't have any reviews about this movie</p>\n            )}\n        </div>\n    );\n};\n\nexport default Reviews;\n"],"names":["AUTH_TOKEN","BASE_URL","getPopularMovies","abort","axios","signal","respons","getSearchMovie","name","getMovie","id","getMovieCast","getMovieReviews","Container","styled","Title","Text","useParams","useState","state","setSteta","load","setload","useEffect","abortController","AbortController","then","res","data","results","length","map","author","content"],"sourceRoot":""}