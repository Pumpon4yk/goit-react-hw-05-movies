{"version":3,"file":"static/js/963.cbb3f98a.chunk.js","mappings":"mTAEMA,EAAa,mCACbC,EAAW,gCAEXC,EAAgB,mCAAG,WAAMC,GAAN,gGAEKC,EAAAA,EAAAA,IAAA,UACfH,EADe,oCACqBD,GACvC,CACIK,OAAQF,EAAME,SALL,cAEXC,EAFW,yBAQVA,GARU,wHAAH,sDAchBC,EAAc,mCAAG,WAAOJ,EAAOK,GAAd,gGAEOJ,EAAAA,EAAAA,IAAA,UACfH,EADe,gCACiBD,EADjB,kBACqCQ,GACvD,CACIH,OAAQF,EAAME,SALP,cAETC,EAFS,yBAQRA,GARQ,wHAAH,wDAedG,EAAQ,mCAAG,WAAON,EAAMO,GAAb,gGAEaN,EAAAA,EAAAA,IAAA,UACfH,EADe,iBACES,EADF,oBACgBV,GAClC,CACIK,OAAQF,EAAME,SALb,cAEHC,EAFG,yBAQFA,GARE,wHAAH,wDAeRK,EAAY,mCAAG,WAAOR,EAAOO,GAAd,gGAESN,EAAAA,EAAAA,IAAA,UACfH,EADe,iBACES,EADF,4BACwBV,GAC1C,CACIK,OAAQF,EAAME,SALT,cAEPC,EAFO,yBAQNA,GARM,wHAAH,wDAcZM,EAAe,mCAAG,WAAOT,EAAOO,GAAd,gGAEMN,EAAAA,EAAAA,IAAA,UACfH,EADe,iBACES,EADF,4BACwBV,GAC1C,CACIK,OAAQF,EAAME,SALN,cAEVC,EAFU,yBAQTA,GARS,wHAAH,uD,iFC7DRO,EAAOC,EAAAA,GAAAA,GAAH,6CAKJC,EAAOD,EAAAA,GAAAA,GAAH,qI,6BCwBjB,EA3BmB,SAAC,GAAoB,IAAlBE,EAAiB,EAAjBA,WACZC,GAAWC,EAAAA,EAAAA,MAEjB,OACI,SAACL,EAAD,UACKG,EAAWG,KAAI,gBAAGT,EAAH,EAAGA,GAAIU,EAAP,EAAOA,MAAOZ,EAAd,EAAcA,KAAd,OACZ,SAACO,EAAD,WACI,SAAC,KAAD,CACIM,GAAE,kBAAaX,GACfY,MAAO,CAAEC,KAAMN,GAFnB,gBAIKG,QAJL,IAIKA,EAAAA,EAASZ,KALPE,EADC,KAY3B,C,6GCnBYc,EAAYV,EAAAA,GAAAA,IAAH,0B,mBCATW,EAAOX,EAAAA,GAAAA,KAAH,wCAIJY,EAAQZ,EAAAA,GAAAA,MAAH,sDAKLa,EAASb,EAAAA,GAAAA,OAAH,2D,SCuBnB,EA7BqB,SAAC,GAAoB,IAAnBc,EAAkB,EAAlBA,aACrB,GAIIC,EAAAA,EAAAA,MAHFC,EADF,EACEA,SACAC,EAFF,EAEEA,aACAC,EAHF,EAGEA,MAaF,OACE,UAACP,EAAD,CAAMQ,SAAUF,GAXD,SAAC,GAAY,IAAXvB,EAAU,EAAVA,KACjBA,EAAK0B,SAKLN,EAAapB,GACbwB,IACD,IAGC,WACE,SAACN,GAAD,gBAAOS,aAAc,IAAQL,EAAS,SAAtC,IAA+CM,WAAS,MACxD,SAACT,EAAD,CAAQU,KAAK,SAAb,sBAGL,E,uCCWD,EAhCe,WACX,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACIC,EAASF,EAAaG,IAAI,WAG9BC,EAAAA,EAAAA,YAAU,WACN,GAAe,KAAXF,EAAJ,CAEA,IAAMG,EAAkB,IAAIC,gBAM5B,OAJAzC,EAAAA,EAAAA,IAAewC,EAAiBH,GAAQK,MAAK,SAAAC,GAAG,OAC5CV,EAAUU,EAAIC,KAAKC,QADyB,IAIzC,WACHL,EAAgB5C,OACnB,CAVwB,CAW5B,GAAE,CAACyC,IAMJ,OACI,UAACpB,EAAD,YACI,SAAC,EAAD,CAAcI,aAND,SAAApB,GACjBmC,EAAgB,CAAEC,OAAQpC,GAC7B,IAKQ+B,IAAU,SAACc,EAAA,EAAD,CAAYrC,WAAYuB,MAG9C,C","sources":["API/get-API.js","components/ListMovies/ListMovies.styled.jsx","components/ListMovies/ListMovies.jsx","pages/Movies/Movies.styled.jsx","components/SearchMovies/SearchMovies.styled.jsx","components/SearchMovies/SearchMovies.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst AUTH_TOKEN = 'b417ad14809407555d40747f9080afa2';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst getPopularMovies = async abort => {\n    try {\n        const respons = await axios.get(\n            `${BASE_URL}trending/all/day?api_key=${AUTH_TOKEN}`,\n            {\n                signal: abort.signal,\n            }\n        );\n        return respons;\n    } catch (error) {\n        return error;\n    }\n};\n\nconst getSearchMovie = async (abort, name) => {\n    try {\n        const respons = await axios.get(\n            `${BASE_URL}search/movie?api_key=${AUTH_TOKEN}&query=${name}`,\n            {\n                signal: abort.signal,\n            }\n        );\n        return respons;\n    } catch (error) {\n        return error;\n    }\n};\n\n\nconst getMovie = async (abort,id) => {\n    try {\n        const respons = await axios.get(\n            `${BASE_URL}movie/${id}?api_key=${AUTH_TOKEN}`,\n            {\n                signal: abort.signal,\n            }\n        );\n        return respons;\n    } catch (error) {\n        return error;\n    }\n};\n\n\nconst getMovieCast = async (abort, id) => {\n    try {\n        const respons = await axios.get(\n            `${BASE_URL}movie/${id}/credits?api_key=${AUTH_TOKEN}`,\n            {\n                signal: abort.signal,\n            }\n        );\n        return respons;\n    } catch (error) {\n        return error;\n    }\n};\n\nconst getMovieReviews = async (abort, id) => {\n    try {\n        const respons = await axios.get(\n            `${BASE_URL}movie/${id}/reviews?api_key=${AUTH_TOKEN}`,\n            {\n                signal: abort.signal,\n            }\n        );\n        return respons;\n    } catch (error) {\n        return error;\n    }\n};\n\nexport { getPopularMovies, getSearchMovie, getMovie, getMovieCast, getMovieReviews };\n","import styled from \"styled-components\";\n\nexport const List = styled.ul`\nlist-style: none;\n\n`;\n\nexport const Item = styled.li`\n/* color: #212121; */\nmargin-bottom: 10px;\n/* text-decoration: underline teal; */\n/* cursor: pointer; */\n`;","import { List, Item } from './ListMovies.styled';\nimport { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst ListMovies = ({ listMovies }) => {\n    const location = useLocation();\n\n    return (\n        <List>\n            {listMovies.map(({ id, title, name }) => (\n                <Item key={id}>\n                    <Link\n                        to={`/movies/${id}`}\n                        state={{ from: location }}\n                    >\n                        {title ?? name}\n                    </Link>\n                </Item>\n            ))}\n        </List>\n    );\n};\nListMovies.propTypes = {\n    movies: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired,\n        title: PropTypes.string.isRequired,\n      })\n    ),\n  };\nexport default ListMovies;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n\n`;","import styled from \"styled-components\";\n\nexport const Form = styled.form`\npadding: 20px;\n`;\n\nexport const Input = styled.input`\nwidth: 300px;\nheight: 20px;\n`;\n\nexport const Button = styled.button`\nheight: 25px;\nmargin-left:  5px;\n`;","import { useForm } from 'react-hook-form';\nimport { Form, Input, Button } from './SearchMovies.styled';\nimport PropTypes from 'prop-types';\n\n\nconst SearchMovies = ({handelSubmit}) => {\n  const {\n    register,\n    handleSubmit,\n    reset,\n  } = useForm();\n\n  const onSubmit = ({name}) => {\nif(!name.trim()) {\n  // alert(\"Empty string\")\n  return\n};\n\n    handelSubmit(name)\n    reset()\n  };\n\n  return (\n    <Form onSubmit={handleSubmit(onSubmit)}>\n      <Input defaultValue={''} {...register('name')} autoFocus/>\n      <Button type=\"submit\">Search</Button>\n    </Form>\n  );\n};\n\nSearchMovies.propTypes = {\n  handelSubmit: PropTypes.func.isRequired\n}\n\nexport default SearchMovies;\n","import { Container } from './Movies.styled';\nimport SearchMovies from '../../components/SearchMovies';\nimport { useSearchParams } from 'react-router-dom';\nimport { getSearchMovie } from 'API/get-API';\nimport { useEffect, useState } from 'react';\nimport ListMovies from 'components/ListMovies';\n\nconst Movies = () => {\n    const [movies, setMovies] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n  const search = searchParams.get('search');\n\n\n    useEffect(() => {\n        if (search === '') return;\n\n        const abortController = new AbortController();\n\n        getSearchMovie(abortController, search).then(res =>\n            setMovies(res.data.results)\n        );\n\n        return () => {\n            abortController.abort();\n        };\n    }, [search]);\n\n    const handelSubmit = name => {\n        setSearchParams({ search: name });\n    };\n\n    return (\n        <Container>\n            <SearchMovies handelSubmit={handelSubmit} />\n            {movies && <ListMovies listMovies={movies} />}\n        </Container>\n    );\n};\n\nexport default Movies;\n"],"names":["AUTH_TOKEN","BASE_URL","getPopularMovies","abort","axios","signal","respons","getSearchMovie","name","getMovie","id","getMovieCast","getMovieReviews","List","styled","Item","listMovies","location","useLocation","map","title","to","state","from","Container","Form","Input","Button","handelSubmit","useForm","register","handleSubmit","reset","onSubmit","trim","defaultValue","autoFocus","type","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","search","get","useEffect","abortController","AbortController","then","res","data","results","ListMovies"],"sourceRoot":""}