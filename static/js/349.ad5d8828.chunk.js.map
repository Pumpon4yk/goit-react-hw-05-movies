{"version":3,"file":"static/js/349.ad5d8828.chunk.js","mappings":"mTAEMA,EAAa,mCACbC,EAAW,gCAEXC,EAAgB,mCAAG,WAAMC,GAAN,gGAEKC,EAAAA,EAAAA,IAAA,UACfH,EADe,sCACuBD,GACzC,CACIK,OAAQF,EAAME,SALL,cAEXC,EAFW,yBAQVA,GARU,wHAAH,sDAchBC,EAAc,mCAAG,WAAOJ,EAAOK,GAAd,gGAEOJ,EAAAA,EAAAA,IAAA,UACfH,EADe,gCACiBD,EADjB,kBACqCQ,GACvD,CACIH,OAAQF,EAAME,SALP,cAETC,EAFS,yBAQRA,GARQ,wHAAH,wDAedG,EAAQ,mCAAG,WAAON,EAAMO,GAAb,gGAEaN,EAAAA,EAAAA,IAAA,UACfH,EADe,iBACES,EADF,oBACgBV,GAClC,CACIK,OAAQF,EAAME,SALb,cAEHC,EAFG,yBAQFA,GARE,wHAAH,wDAeRK,EAAY,mCAAG,WAAOR,EAAOO,GAAd,gGAESN,EAAAA,EAAAA,IAAA,UACfH,EADe,iBACES,EADF,4BACwBV,GAC1C,CACIK,OAAQF,EAAME,SALT,cAEPC,EAFO,yBAQNA,GARM,wHAAH,wDAcZM,EAAe,mCAAG,WAAOT,EAAOO,GAAd,gGAEMN,EAAAA,EAAAA,IAAA,UACfH,EADe,iBACES,EADF,4BACwBV,GAC1C,CACIK,OAAQF,EAAME,SALN,cAEVC,EAFU,yBAQTA,GARS,wHAAH,uD,iFC7DRO,EAAOC,EAAAA,GAAAA,GAAH,6CAKJC,EAAOD,EAAAA,GAAAA,GAAH,qI,6BCwBjB,EA3BmB,SAAC,GAAoB,IAAlBE,EAAiB,EAAjBA,WACZC,GAAWC,EAAAA,EAAAA,MAEjB,OACI,SAACL,EAAD,UACKG,EAAWG,KAAI,gBAAGT,EAAH,EAAGA,GAAIU,EAAP,EAAOA,MAAOZ,EAAd,EAAcA,KAAd,OACZ,SAACO,EAAD,WACI,SAAC,KAAD,CACIM,GAAE,kBAAaX,GACfY,MAAO,CAAEC,KAAMN,GAFnB,gBAIKG,QAJL,IAIKA,EAAAA,EAASZ,KALPE,EADC,KAY3B,C,4FCnBYc,E,QAAYV,GAAAA,IAAH,6C,sCCsCtB,EAjCa,WACT,OAAsCW,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACJ,GAAwBF,EAAAA,EAAAA,WAAS,GAAjC,eAAOG,EAAP,KAAaC,EAAb,KAmBI,OAhBAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAkB,IAAIC,gBAU5B,OARA9B,EAAAA,EAAAA,IAAiB6B,GAChBE,MAAK,SAAAC,GAEEP,EAAeO,EAAIC,KAAKC,SAC5BP,GAAQ,EACX,IAGM,WACHE,EAAgB5B,OACnB,CACJ,GAAE,KAGC,UAACqB,EAAD,YACI,2CACCI,GAAQF,IAAe,SAACW,EAAA,EAAD,CAAYrB,WAAYU,MAG3D,C","sources":["API/get-API.js","components/ListMovies/ListMovies.styled.jsx","components/ListMovies/ListMovies.jsx","pages/Home/Home.styled.jsx","pages/Home/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst AUTH_TOKEN = 'b417ad14809407555d40747f9080afa2';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst getPopularMovies = async abort => {\n    try {\n        const respons = await axios.get(\n            `${BASE_URL}trending/movie/day?api_key=${AUTH_TOKEN}`,\n            {\n                signal: abort.signal,\n            }\n        );\n        return respons;\n    } catch (error) {\n        return error;\n    }\n};\n\nconst getSearchMovie = async (abort, name) => {\n    try {\n        const respons = await axios.get(\n            `${BASE_URL}search/movie?api_key=${AUTH_TOKEN}&query=${name}`,\n            {\n                signal: abort.signal,\n            }\n        );\n        return respons;\n    } catch (error) {\n        return error;\n    }\n};\n\n\nconst getMovie = async (abort,id) => {\n    try {\n        const respons = await axios.get(\n            `${BASE_URL}movie/${id}?api_key=${AUTH_TOKEN}`,\n            {\n                signal: abort.signal,\n            }\n        );\n        return respons;\n    } catch (error) {\n        return error;\n    }\n};\n\n\nconst getMovieCast = async (abort, id) => {\n    try {\n        const respons = await axios.get(\n            `${BASE_URL}movie/${id}/credits?api_key=${AUTH_TOKEN}`,\n            {\n                signal: abort.signal,\n            }\n        );\n        return respons;\n    } catch (error) {\n        return error;\n    }\n};\n\nconst getMovieReviews = async (abort, id) => {\n    try {\n        const respons = await axios.get(\n            `${BASE_URL}movie/${id}/reviews?api_key=${AUTH_TOKEN}`,\n            {\n                signal: abort.signal,\n            }\n        );\n        return respons;\n    } catch (error) {\n        return error;\n    }\n};\n\nexport { getPopularMovies, getSearchMovie, getMovie, getMovieCast, getMovieReviews };\n","import styled from \"styled-components\";\n\nexport const List = styled.ul`\nlist-style: none;\n\n`;\n\nexport const Item = styled.li`\n/* color: #212121; */\nmargin-bottom: 10px;\n/* text-decoration: underline teal; */\n/* cursor: pointer; */\n`;","import { List, Item } from './ListMovies.styled';\nimport { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst ListMovies = ({ listMovies }) => {\n    const location = useLocation();\n\n    return (\n        <List>\n            {listMovies.map(({ id, title, name }) => (\n                <Item key={id}>\n                    <Link\n                        to={`/movies/${id}`}\n                        state={{ from: location }}\n                    >\n                        {title ?? name}\n                    </Link>\n                </Item>\n            ))}\n        </List>\n    );\n};\nListMovies.propTypes = {\n    movies: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired,\n        title: PropTypes.string.isRequired,\n      })\n    ),\n  };\nexport default ListMovies;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\npadding-left: 20px;\n`;","import { Container } from './Home.styled';\nimport { getPopularMovies } from 'API/get-API';\nimport { useEffect, useState } from 'react';\nimport ListMovies from 'components/ListMovies';\n\nimport PropTypes from 'prop-types';\n\nconst Home = () => {\n    const [stateMovies, setStateMovies] = useState([]);\nconst [load, setload] = useState(false)\n\n\n    useEffect(() => {\n        const abortController = new AbortController();\n\n        getPopularMovies(abortController)\n        .then(res =>\n            {\n                setStateMovies(res.data.results)\n            setload(true)\n        }\n        );\n\n        return () => {\n            abortController.abort();\n        };\n    }, []);\n\n    return (\n        <Container>\n            <h2>Trending today</h2>\n            {load && stateMovies && <ListMovies listMovies={stateMovies} />}\n        </Container>\n    );\n};\n\nHome.propTypes = {\n    stateMovies: PropTypes.array.isRequired\n}\n\nexport default Home;\n"],"names":["AUTH_TOKEN","BASE_URL","getPopularMovies","abort","axios","signal","respons","getSearchMovie","name","getMovie","id","getMovieCast","getMovieReviews","List","styled","Item","listMovies","location","useLocation","map","title","to","state","from","Container","useState","stateMovies","setStateMovies","load","setload","useEffect","abortController","AbortController","then","res","data","results","ListMovies"],"sourceRoot":""}