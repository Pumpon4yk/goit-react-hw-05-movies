{"version":3,"file":"static/js/422.e561a5d5.chunk.js","mappings":"8SAEMA,EAAa,mCACbC,EAAW,gCAEXC,EAAgB,mCAAG,WAAMC,GAAN,gGAEKC,EAAAA,EAAAA,IAAA,UACfH,EADe,oCACqBD,GACvC,CACIK,OAAQF,EAAME,SALL,cAEXC,EAFW,yBAQVA,GARU,wHAAH,sDAchBC,EAAc,mCAAG,WAAOJ,EAAOK,GAAd,gGAEOJ,EAAAA,EAAAA,IAAA,UACfH,EADe,gCACiBD,EADjB,kBACqCQ,GACvD,CACIH,OAAQF,EAAME,SALP,cAETC,EAFS,yBAQRA,GARQ,wHAAH,wDAedG,EAAQ,mCAAG,WAAMC,GAAN,gGAEaN,EAAAA,EAAAA,IAAA,UACfH,EADe,iBACES,EADF,oBACgBV,IAH7B,cAEHM,EAFG,yBAKFA,GALE,wHAAH,sDAYRK,EAAY,mCAAG,WAAMD,GAAN,gGAESN,EAAAA,EAAAA,IAAA,UACfH,EADe,iBACES,EADF,4BACwBV,IAHjC,cAEPM,EAFO,yBAKNA,GALM,wHAAH,sDAWZM,EAAe,mCAAG,WAAMF,GAAN,gGAEMN,EAAAA,EAAAA,IAAA,UACfH,EADe,iBACES,EADF,4BACwBV,IAH9B,cAEVM,EAFU,yBAKTA,GALS,wHAAH,qD,sHCrDRO,EAAYC,EAAAA,GAAAA,IAAH,wCAITC,EAASD,EAAAA,GAAAA,IAAH,8HAQNE,EAAUF,EAAAA,GAAAA,IAAH,6JASPG,EAAOH,EAAAA,GAAAA,EAAH,oEAKJI,EAAMJ,EAAAA,GAAAA,IAAH,uCAIHK,GAASL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,uM,mCC4BnB,EAvDqB,WAAO,IAAD,IACvB,GAA0BO,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQb,GAAOc,EAAAA,EAAAA,MAAPd,GAEFe,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAM7C,OAJAC,EAAAA,EAAAA,YAAU,YACNpB,EAAAA,EAAAA,IAASC,GAAIoB,MAAK,SAAAC,GAAG,OAAIR,EAASQ,EAAIC,KAAjB,GACxB,GAAE,CAACtB,KAGA,UAACG,EAAD,YACI,SAACM,EAAD,CAAQc,GAAIR,EAAZ,qBAECH,IACG,UAACN,EAAD,YACI,UAACD,EAAD,YACA,SAACG,EAAD,CAAKgB,IAAG,UAnBP,oCAmBO,OAAoBZ,EAAMa,aAAeC,IAAKd,EAAMe,SAC5D,4BACI,0BACKf,EAAMe,MADX,KACoBf,EAAMgB,aAAaC,MAAM,EAAG,GADhD,QAGA,UAACtB,EAAD,0BACiBuB,KAAKC,MAA2B,GAArBnB,EAAMoB,cADlC,QAGA,qCACCpB,EAAMqB,UACH,SAAC1B,EAAD,UAAOK,EAAMqB,YAEb,SAAC1B,EAAD,yBAEJ,mCACCK,EAAMsB,OAAOC,KAAI,SAAAC,GAAC,OACf,SAAC7B,EAAD,UAAkB6B,EAAEtC,MAATsC,EAAEpC,GADE,WAKvB,mDACA,2BACI,yBACI,SAAC,KAAD,CAAMuB,GAAG,OAAT,qBAEJ,yBACI,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGR,SAAC,EAAAc,SAAD,CAAUC,UAAU,uCAApB,UACI,SAAC,KAAD,WAMvB,C","sources":["API/get-API.js","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst AUTH_TOKEN = 'b417ad14809407555d40747f9080afa2';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst getPopularMovies = async abort => {\n    try {\n        const respons = await axios.get(\n            `${BASE_URL}trending/all/day?api_key=${AUTH_TOKEN}`,\n            {\n                signal: abort.signal,\n            }\n        );\n        return respons;\n    } catch (error) {\n        return error;\n    }\n};\n\nconst getSearchMovie = async (abort, name) => {\n    try {\n        const respons = await axios.get(\n            `${BASE_URL}search/movie?api_key=${AUTH_TOKEN}&query=${name}`,\n            {\n                signal: abort.signal,\n            }\n        );\n        return respons;\n    } catch (error) {\n        return error;\n    }\n};\n\n\nconst getMovie = async id => {\n    try {\n        const respons = await axios.get(\n            `${BASE_URL}movie/${id}?api_key=${AUTH_TOKEN}`\n        );\n        return respons;\n    } catch (error) {\n        return error;\n    }\n};\n\n\nconst getMovieCast = async id => {\n    try {\n        const respons = await axios.get(\n            `${BASE_URL}movie/${id}/credits?api_key=${AUTH_TOKEN}`\n        );\n        return respons;\n    } catch (error) {\n        return error;\n    }\n};\n\nconst getMovieReviews = async id => {\n    try {\n        const respons = await axios.get(\n            `${BASE_URL}movie/${id}/reviews?api_key=${AUTH_TOKEN}`\n        );\n        return respons;\n    } catch (error) {\n        return error;\n    }\n};\n\nexport { getPopularMovies, getSearchMovie, getMovie, getMovieCast, getMovieReviews };\n","import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\n\nexport const Container = styled.div`\npadding: 20px;\n`;\n\nexport const Wraper = styled.div`\ndisplay: flex;\npadding: 10px;\n/* padding-top: 0; */\ngap: 10px;\nborder-bottom: 1px solid #212121;\n`;\n\nexport const Datails = styled.div`\ndisplay: flex;\nflex-direction: column;\n/* padding: 10px; */\n/* padding-top: 0; */\ngap: 10px;\nborder-bottom: 1px solid #212121;\n`;\n\nexport const Text = styled.p`\ndisplay: inline-block;\nmargin-right: 5px;\n`;\n\nexport const Img = styled.img`\nwidth: 300px;\n`;\n\nexport const Button = styled(NavLink)`\ndisplay: block;\nborder: 1px solid black;\nborder-radius: 5%;\nmargin-left: 10px;\npadding: 3px;\ntext-align:center;\ncolor: #212121;\n\nwidth: 60px;\ntext-decoration: none;\n`\n\n\n","import { Container, Img, Wraper, Text, Button, Datails } from './MovieDetails.styled';\nimport { useParams, useLocation, Link , Outlet} from 'react-router-dom';\nimport { getMovie } from 'API/get-API';\nimport { useEffect, useState, Suspense } from 'react';\n\nconst BASE_URL_IMG = 'https://image.tmdb.org/t/p/w500/';\n\nconst MovieDetails = () => {\n    const [movie, setMovie] = useState(null);\n    const { id } = useParams();\n    const location = useLocation();\n    const backLinkHref = location.state?.from ?? '/';\n\n    useEffect(() => {\n        getMovie(id).then(res => setMovie(res.data));\n    }, [id]);\n\n    return (\n        <Container>\n            <Button to={backLinkHref}>to back</Button>\n\n            {movie && (\n                <Datails>\n                    <Wraper>\n                    <Img src={`${BASE_URL_IMG}${movie.poster_path}`} alt={movie.title}/>\n                    <div>\n                        <h2>\n                            {movie.title} ({movie.release_date.slice(0, 4)})\n                        </h2>\n                        <Text>\n                            User score: {Math.floor(movie.vote_average * 10)}%\n                        </Text>\n                        <h3>Overview</h3>\n                        {movie.overview ? (\n                            <Text>{movie.overview}</Text>\n                        ) : (\n                            <Text>Not found</Text>\n                        )}\n                        <h4>Ganres</h4>\n                        {movie.genres.map(e => (\n                            <Text key={e.id}>{e.name}</Text>\n                        ))}\n                        </div>\n                    </Wraper>\n                    <p>Additional information</p>\n                    <ul>\n                        <li>\n                            <Link to=\"cast\">Cast</Link>\n                        </li>\n                        <li>\n                            <Link to=\"reviews\">Reviews</Link>\n                        </li>\n                    </ul>\n                    <Suspense fallback={<div>loading..</div>}>\n                        <Outlet />\n                    </Suspense>\n                </Datails>\n            )}\n        </Container>\n    );\n};\n\nexport default MovieDetails;\n"],"names":["AUTH_TOKEN","BASE_URL","getPopularMovies","abort","axios","signal","respons","getSearchMovie","name","getMovie","id","getMovieCast","getMovieReviews","Container","styled","Wraper","Datails","Text","Img","Button","NavLink","useState","movie","setMovie","useParams","backLinkHref","useLocation","state","from","useEffect","then","res","data","to","src","poster_path","alt","title","release_date","slice","Math","floor","vote_average","overview","genres","map","e","Suspense","fallback"],"sourceRoot":""}